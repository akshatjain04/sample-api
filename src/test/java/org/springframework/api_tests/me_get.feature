# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=ae6b8ce5ab
# 
# 

# ********RoostGPT********
Feature: Account details retrieval

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:8080'
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * header Token = authToken

  Scenario: Get account details successfully
    Given path '/me'
    When method get
    Then status 200
    And match header api-version == '1.0.0'
    And match response ==
      """
      {
        id: '#uuid',
        did: '#string?',
        name: '#regex(^[\\p{L} .\'-]{1,100}$)?',
        image: '#regex(^\\w+:(\\/\\/?)[^\\s]+$)?',
        email: '#regex(^(([^<>()[\\]\\\\.,;:\\s@\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)',
        settings: '##object',
        createdAt: '#date',
        updatedAt: '#date'
      }
      """

  Scenario: Get account details with missing or invalid token
    Given path '/me'
    * header Token = null
    When method get
    Then status 401
    And match header api-version == '1.0.0'
    And match response ==
      """
      {
        error: '#string',
        description: '#string'
      }
      """

  Scenario: Get account details with bad request
    Given path '/me'
    * header Token = 'invalid-token'
    When method get
    Then status 400
    And match header api-version == '1.0.0'
    And match response ==
      """
      {
        error: '#string',
        description: '#string',
        value: '#notnull?',
        field: '#string?',
        schema_field: '#string?'
      }
      """
