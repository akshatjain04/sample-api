# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=ae6b8ce5ab
# 
# 

# ********RoostGPT********
Feature: RESTful API account details endpoint

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * header Token = authToken

Scenario: Get account details with a valid API key
  Given path '/me'
  When method get
  Then status 200
  And match header api-version == '1.0.0'
  And match response contains { id: '#uuid', createdAt: '#string', did: '##string', email: '#string', id: '#string', image: '##string', name: '##string', settings: '#object', updatedAt: '#string' }
  And match response.id == '#uuid'
  And match response.createdAt == '#string'
  And match response.updatedAt == '#string'
  And match response.email == '#regex(^(([^<>()[\\]\\.,;:\\s@\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)'
  And match response.settings == '#object'
  And match response?.image == '#regex(^\\w+:(\\/?\\/?)[^\\s]+$)'
  And match response?.name == '#regex(^[\\p{L} .'-]{1,100}$)'

Scenario: Get account details without an API key
  Given path '/me'
  And header Token = ''
  When method get
  Then status 401
  And match header api-version == '1.0.0'
  And match response contains { error: '#string', description: '#string' }

Scenario: Get account details with an invalid API key
  Given path '/me'
  And header Token = 'invalid_token'
  When method get
  Then status 401
  And match header api-version == '1.0.0'
  And match response contains { error: '#string', description: '#string' }

Scenario: Get account details with a malformed request
  Given path '/me'
  And header Token = authToken
  And request { invalidField: 'value' }
  When method post
  Then status 400
  And match header api-version == '1.0.0'
  And match response contains { error: '#string', description: '#string' }
