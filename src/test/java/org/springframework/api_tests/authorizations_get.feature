# ********RoostGPT********

# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview
# 
# Feature file generated for /authorizations_get for http method type GET 
# RoostTestHash=3b64f22044
# 
# 

# ********RoostGPT********
Feature: List accounts who have access to my account

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * header Token = karate.properties['AUTH_TOKEN']
  * url urlBase

Scenario: Successful retrieval of authorizations
  Given path '/authorizations'
  When method get
  Then status 200
  And match responseHeaders['api-version'] == '1.0.0'
  And match response == 
  """
  { 
    total: '#number', 
    authorizations: '#array' 
  }
  """
  And match each response.authorizations[*] contains 
  """
  { 
    id: '#uuid', 
    name: '#regex(^[\\p{L} .\'-]{1,100}$)', 
    email: '#regex(^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)', 
    createdAt: '#string', 
    updatedAt: '#string' 
  }
  """

Scenario: Unauthorized access to authorizations
  * remove header Token
  Given path '/authorizations'
  When method get
  Then status 401
  And match responseHeaders['api-version'] == '1.0.0'
  And match response == 
  """
  { 
    error: '#string', 
    description: '#string' 
  }
  """

Scenario: Bad request to authorizations with invalid parameter
  Given path '/authorizations'
  And param invalidParam = 'invalidValue'
  When method get
  Then status 400
  And match responseHeaders['api-version'] == '1.0.0'
  And match response == anyOf(
  """
    { 
      error: '#string', 
      description: '#string' 
    },
    { 
      error: '#regex(^validation/.*)', 
      description: '#string', 
      schema_field: '#string', 
      value: '#present' 
    }
  """
  )
